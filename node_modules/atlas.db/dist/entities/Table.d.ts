import { TableSchema } from "../types/TableSchema";
import IQuery from "../interfaces/IQuery";
import { Structure } from "./Structure";
export declare class Table<StructureData, TableData extends TableSchema<StructureData>> {
    name: string;
    path: string;
    structure: Structure<StructureData>;
    constructor(name: string, path: string, structure: Structure<StructureData>);
    data(): any;
    create(props: TableData): ({ [key in keyof StructureData]: StructureData[key]; } & {
        save: () => any;
        id: any;
    }) | undefined;
    get(id: TableData["id"]): ({ [key in keyof StructureData]: StructureData[key]; } & {
        save: () => any;
        id: any;
    }) | undefined;
    find(func: (this: void, value: TableData, index: number, obj: TableData[]) => any, thisArg?: any): ({ [key in keyof StructureData]: StructureData[key]; } & {
        save: () => any;
        id: any;
    }) | undefined;
    remove(id: TableData["id"]): boolean;
    clear(): boolean;
    query(query: IQuery<TableData>): any;
}
